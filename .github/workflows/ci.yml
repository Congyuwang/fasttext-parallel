name: PR check

on:
  push:
    branches: [ ci-test ]

jobs:
  macos:
    runs-on: macos-11
    strategy:
      matrix:
        py_version: [3.7, 3.8, 3.9, "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_version }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.16.x'
      - name: Build wheels - universal2
        run: |
          rustup target add aarch64-apple-darwin
          pip install maturin
          maturin build --release --universal2 --out dist
      - name: Install built wheel - universal2
        run: |
          pip install numpy
          pip install fasttext-parallel --no-index --find-links dist --force-reinstall --no-dependencies
      - name: Python UnitTest
        run: |
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
        py_version: [ 3.7, 3.8, 3.9, "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py_version }}
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
        env:
          LIBCLANG_PATH: ${{ runner.temp }}/llvm-11.0/lib
      - name: Install built wheel and test
        run: |
          pip install numpy fasttext
          pip install fasttext-parallel --no-index --find-links dist --force-reinstall --no-dependencies
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  manylinux_2_28:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2_28
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11'
          container: messense/manylinux_2_28-cross:${{ matrix.target }}
      - name: Install built wheel and test
        if: matrix.target == 'x86_64'
        run: |
          pip install numpy fasttext
          pip install fasttext-parallel --no-index --find-links dist --force-reinstall --no-dependencies
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  manylinux2014:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2014
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11'
      - name: Install built wheel and test
        if: matrix.target == 'x86_64'
        run: |
          pip install numpy fasttext
          pip install fasttext-parallel --no-index --find-links dist --force-reinstall --no-dependencies
          python -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64]
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          rust-toolchain: stable
          rustup-components: rustfmt
          target: ${{ matrix.target }}
          manylinux: 2_28
          args: --release --out dist --interpreter '3.7 3.8 3.9 3.10 3.11'
          container:  messense/manylinux2014-cross:${{ matrix.target }}
      - uses: uraimo/run-on-arch-action@v2
        if: matrix.target != 'ppc64'
        name: Install built wheel and test
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip install numpy fasttext
            pip3 install fasttext-parallel --no-index --find-links dist --force-reinstall --no-dependencies
            python3 -m unittest discover -v test
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
